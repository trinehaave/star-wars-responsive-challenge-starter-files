/*Wrote this up while I was reading/doing lesson 7.2 (so it is close to identical,
I've just added more column widths. I leave all of them + comments in at this point. */

* {
	box-sizing: border-box;
}

.row { /*will use only on divs (block level element), so behaviour will be predicatble*/
	max-width: 1000px; 
	padding-left: 20px; /*padding ensures content doesn't hit the edge of the browser window when viewing on smaller screens*/
	padding-right: 20px;
	margin: 0 auto; /*automatically centers content in parent container*/
}

/*clerafix*/
.row::before,
.row::after {
	display: table;
	content: '';
} /*forces the height of each row to expand to the height of its tallest child element. 
That means that rows will vertically contain all their content*/

.row::after {
	clear: both;
} /*clearfix - it ensures that any content that comes after the row will act as though 
the preceding row was in the normal flow, instead of butting up against the top of the row container*/


.col-1, .col-2, .col3, .col-4, 
.col-5, .col-6, .col-7, .col-8, 
.col-9, .col-10, .col-11, .col-12 {
	 float: left;
	 padding-left: 1.04166666%;
	 padding-right: 1.04166666%;
}

/*mobile defaults*/
.col-1, .col-2, .col3, .col-4, 
.col-5, .col-6, .col-7, .col-8, 
.col-9, .col-10, .col-11, .col-12 {
	width: 100%;
}

/*non-mobile grid*/
@media only screen and (min-width: 640px) {
.col-1 {
	width: 8.3333333%;
} 

.col-2 {
	width: 16.666667%;
}

.col-3 {
	width: 25%;
}

.col-4 {
	width: 33.33333%;
}

.col-5 {
	width: 41.666667%;
}

.col-6 {
	width: 50%;
}

.col-7 {
	width: 58.333333%;
}

.col-8 {
	width: 66.666667%;
}

.col-9 {
	width: 75%;
}

.col-10 {
	width: 83.333333%;
}

.col-11 {
	width: 91.666667%;
}

.col-12 {
	width: 100%;
}

}
